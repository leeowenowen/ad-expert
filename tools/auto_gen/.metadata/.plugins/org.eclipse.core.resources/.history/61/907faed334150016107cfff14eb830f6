class Column:
  __kv = {}
  def __init__(self):
    pass
  
  def get(self, k):
    return self.__kv[k]
  
  def contains(k):
    return k in self.__kv

class Table:
  __name = ''
  __title = ''
  __columns = []
  
  def __init__(self, json):
    if json and isinstance(json, dict):
      __name = json['name']
      __title = json['table_title']
      columns = json['columns']
      if columns:
        for column in columns:
          self.__columns.append(Column(column))
  
  def addColumn(column):
    self.__columns.append(column)

  def name():
    return __name

  def title():
    return self.__title
  
  def columns():
    return self.__columns

class DB:
    __host = ''
    __port = ''
  __username = ''
  __password = ''
  __name = ''
  __tables = []
  
  def __init__(self):
    pass
 
  def __init__(self, json):
    __host = json['host']
    __port = json['port']
    __username = json['username']
    __password = json['password']
    __name = json['name']
    tables = json['tables']
    if tables:
      for table in tables:
        self.__tables.append(Table(table))
  def host():
    return __host
  
  def port():
    return __port

  def name():
    return __name

  def user():
    return __username

  def password():
    return __password
  
  def tables():
    return __tables

class DBParser:
  @staticmethod
  def fromJson(json):
    return DB(json['db'])



